<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[iOS Dev]]></title>
  <link href="http://fanruten.github.io/atom.xml" rel="self"/>
  <link href="http://fanruten.github.io/"/>
  <updated>2014-06-29T00:28:35+04:00</updated>
  <id>http://fanruten.github.io/</id>
  <author>
    <name><![CDATA[Гуменный Руслан]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Полезные шорткаты для iTerm2]]></title>
    <link href="http://fanruten.github.io/blog/2014/06/27/iterm-shortcuts/"/>
    <updated>2014-06-27T18:49:51+04:00</updated>
    <id>http://fanruten.github.io/blog/2014/06/27/iterm-shortcuts</id>
    <content type="html"><![CDATA[<p>Очистить строку ввода можно нажатием Ctrl+U. Вернуть удаленный текст обратно Ctrl+Y.</p>

<p>Чтобы добавить навигацию по строке, надо открыть настройки и добавить ярлыки с Action равным Send Escape Sequence.</p>

<p><img class="center" src="http://fanruten.github.io/images/2014-06-27-iterm-shortcuts/1.png" width="600"></p>

<p>Переход в начало строки:</p>

<pre><code>Keyboard Shortcut: ⌘←
Esc+: [H
</code></pre>

<p>Переход в конец строки:</p>

<pre><code>Keyboard Shortcut: ⌘→
Esc+: [F
</code></pre>

<p>Переход в начало строки:</p>

<pre><code>Keyboard Shortcut: ⌥←
Esc+: b
</code></pre>

<p>Переход в начало строки:</p>

<pre><code>Keyboard Shortcut: ⌥→  
Esc+: f
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Правильный KVO]]></title>
    <link href="http://fanruten.github.io/blog/2014/06/26/true-kvo/"/>
    <updated>2014-06-26T02:17:07+04:00</updated>
    <id>http://fanruten.github.io/blog/2014/06/26/true-kvo</id>
    <content type="html"><![CDATA[<p>Для реализации KVO, объект должен реализовать неформальный протокол NSKeyValueObserving. NSObject уже предоставляет реализацию этого протокола,  поэтому разработчику нужно лишь грамотно использовать готовый механизм.</p>

<p>Вроде как в KVO нет ничего сложного.</p>

<p>Чтобы подписаться надо вызвать:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">addObserver:</span><span class="p">(</span><span class="n">NSObject</span> <span class="o">*</span><span class="p">)</span><span class="nv">anObserver</span> <span class="nf">forKeyPath:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyPath</span> <span class="nf">options:</span><span class="p">(</span><span class="n">NSKeyValueObservingOptions</span><span class="p">)</span><span class="nv">options</span> <span class="nf">context:</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="nv">context</span>
</span></code></pre></td></tr></table></div></figure>


<p>Чтобы отписаться:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">removeObserver:</span><span class="p">(</span><span class="n">NSObject</span> <span class="o">*</span><span class="p">)</span><span class="nv">observer</span> <span class="nf">forKeyPath:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyPath</span> <span class="nf">context:</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="nv">context</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ну и остается только правильно реализовать метод в который приходят уведомления:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">observeValueForKeyPath:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyPath</span> <span class="nf">ofObject:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">object</span> <span class="nf">change:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">change</span> <span class="nf">context:</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="nv">context</span>
</span></code></pre></td></tr></table></div></figure>


<p>Большинство разработчиков умеют правильно подписываться/отписываться, но с observeValueForKeyPath еще возникают проблемы. Вот примеры неправильной реалзиции этого метода из реальных проектов:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">observeValueForKeyPath:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyPath</span> <span class="nf">ofObject:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">object</span> <span class="nf">change:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">change</span> <span class="nf">context:</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="nv">context</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">context</span> <span class="o">!=</span> <span class="p">(</span><span class="n">__bridge</span> <span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">kActionLoadingStateObservationContext</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSUInteger</span> <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">actions</span> <span class="n">indexOfObject</span><span class="o">:</span><span class="n">object</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSAssert</span><span class="p">(</span><span class="n">index</span> <span class="o">!=</span> <span class="n">NSNotFound</span><span class="p">,</span> <span class="s">@&quot;Can not found action %@ in the current actions&quot;</span><span class="p">,</span> <span class="n">object</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">// update loading state  </span>
</span><span class='line'>  <span class="n">YMTAction</span> <span class="o">*</span><span class="n">action</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">actions</span><span class="p">[</span><span class="n">index</span><span class="p">];</span>
</span><span class='line'>  <span class="n">YMTActionView</span> <span class="o">*</span><span class="n">actionView</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">subviews</span><span class="p">[</span><span class="n">index</span><span class="p">];</span>
</span><span class='line'>  <span class="n">actionView</span><span class="p">.</span><span class="n">loading</span> <span class="o">=</span> <span class="n">action</span><span class="p">.</span><span class="n">loading</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">observeValueForKeyPath:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyPath</span> <span class="nf">ofObject:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">object</span> <span class="nf">change:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">change</span> <span class="nf">context:</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="nv">context</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">object</span> <span class="o">==</span> <span class="n">self</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="n">scrollView</span> <span class="o">&amp;&amp;</span> <span class="p">[</span><span class="n">keyPath</span> <span class="n">isEqualToString</span><span class="o">:</span><span class="s">@&quot;contentSize&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">webViewHeightConstraint</span><span class="p">.</span><span class="n">constant</span> <span class="o">=</span> <span class="p">[</span><span class="n">change</span><span class="p">[</span><span class="n">NSKeyValueChangeNewKey</span><span class="p">]</span> <span class="n">CGSizeValue</span><span class="p">].</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">observeValueForKeyPath:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyPath</span> <span class="nf">ofObject:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">object</span> <span class="nf">change:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">change</span> <span class="nf">context:</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="nv">context</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">keyPath</span> <span class="n">isEqual</span><span class="o">:</span><span class="p">@</span><span class="n">keypath</span><span class="p">(</span><span class="n">YRCachedSettings</span><span class="p">.</span><span class="n">new</span><span class="p">,</span> <span class="n">selectedSuburbanZone</span><span class="p">)])</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">zoneDidChange</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">observeValueForKeyPath:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyPath</span> <span class="nf">ofObject:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">object</span> <span class="nf">change:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">change</span> <span class="nf">context:</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="nv">context</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">reloadData</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Главная проблема у всех показанных реализаций, это отсутствие вызова [super observeValueForKeyPath:keyPath:change:context:]. Многие забывают о том, что базовый класс тоже может использовать KVO. Порой даже не забывают, а сознательно опускают вызов метода, так как, когда наткнулись на то, что базовы класс кинул NSInternalInconsistencyException.</p>

<p>Собсвтенно, чтобы не было проблем с базовым классом, [super observeValueForKeyPath:keyPath:change:context:] надо вызвать не при каждом уведомление, а только при тех, на которые вы не подписывались. Чтобы отличить свои уведомления от чужих (принадлежащих базовому классу) надо использовать контекст.</p>

<p>Вот пример правильного observeValueForKeyPath:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">observeValueForKeyPath</span><span class="o">:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">keyPath</span> <span class="n">ofObject</span><span class="o">:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">object</span> <span class="n">change</span><span class="o">:</span><span class="p">(</span><span class="n">__unused</span> <span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="n">change</span> <span class="n">context</span><span class="o">:</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">context</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">if</span> <span class="p">(</span><span class="n">context</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">ja_kvoContext</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="k">if</span> <span class="p">([</span><span class="n">keyPath</span> <span class="n">isEqualToString</span><span class="o">:</span><span class="s">@&quot;view&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>       <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">centerPanel</span><span class="p">.</span><span class="n">isViewLoaded</span> <span class="o">&amp;&amp;</span> <span class="n">self</span><span class="p">.</span><span class="n">recognizesPanGesture</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>         <span class="p">[</span><span class="n">self</span> <span class="n">_addPanGestureToView</span><span class="o">:</span><span class="n">self</span><span class="p">.</span><span class="n">centerPanel</span><span class="p">.</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>     <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">keyPath</span> <span class="n">isEqualToString</span><span class="o">:</span><span class="s">@&quot;viewControllers&quot;</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">object</span> <span class="o">==</span> <span class="n">self</span><span class="p">.</span><span class="n">centerPanel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="c1">// view controllers have changed, need to replace the button  </span>
</span><span class='line'>       <span class="p">[</span><span class="n">self</span> <span class="n">_placeButtonForLeftPanel</span><span class="p">];</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>     <span class="p">[</span><span class="n">super</span> <span class="n">observeValueForKeyPath</span><span class="o">:</span><span class="n">keyPath</span> <span class="n">ofObject</span><span class="o">:</span><span class="n">object</span> <span class="n">change</span><span class="o">:</span><span class="n">change</span> <span class="n">context</span><span class="o">:</span><span class="n">context</span><span class="p">];</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Билд без codesign]]></title>
    <link href="http://fanruten.github.io/blog/2014/06/26/build-without-codesign/"/>
    <updated>2014-06-26T00:58:41+04:00</updated>
    <id>http://fanruten.github.io/blog/2014/06/26/build-without-codesign</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://fanruten.github.io/images/2014-06-26-build-without-codesign/1.png" width="600"></p>

<p>Если попытаться собрать приложение с такой конфигурацией, то будет ошбика:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CodeSign error: code signing is required for product type 'Application'  </span></code></pre></td></tr></table></div></figure>


<p>Чтобы xCode собирал билды без подписи, надо открыть один из следующих файлов в зависимости от Deployment Target:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk/SDKSettings.plist  
</span><span class='line'>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.1.sdk/SDKSettings.plist  
</span><span class='line'>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.0.sdk/SDKSettings.plist  
</span><span class='line'>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.1.sdk/SDKSettings.plist  </span></code></pre></td></tr></table></div></figure>


<p>И поставить ключ CODE_SIGNING_REQUIRED в NO.</p>

<p><img class="center" src="http://fanruten.github.io/images/2014-06-26-build-without-codesign/2.png"></p>

<p>Теперь можно собрать бинарник для которого команда &ldquo;codesign &mdash;display &mdash;verbose=4 SomeApp&rdquo; выведет:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SomeApp: code object is not signed at all  </span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
